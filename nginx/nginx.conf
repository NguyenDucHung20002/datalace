user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;
 
events {
    worker_connections 1024;
}

http {
      upstream backend_servers {
        hash $http_authorization consistent;
        # Define your backend servers here
        server 118.69.52.14:8080;
        server 118.69.52.14:8004;
        server 118.69.52.14:8005;
        # Add more servers as needed
    }
    fastcgi_read_timeout 500;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log main;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   650;
    types_hash_max_size 2048;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    server {
            listen       80;
            listen  [::]:80;
            server_name  localhost;
            include /etc/nginx/default.d/*.conf;
            location / {
                    alias /var/www/dist/;
                    try_files $uri $uri/ /index.html;

                    add_header Cache-Control public;
                    add_header Cache-Control no-store;
                    add_header Cache-Control no-cache;

                    if_modified_since off;
                    add_header Last-Modified "";
                    expires off;
            }
    }
    server {
        listen 443 ssl; #enable SSL

        server_name datalace.org www.datalace.org  ;

         # Replace with the path to your SSL certificate
          # Replace with the path to your SSL private key
        ssl_certificate /home/ssl/datalace_org_certificate.crt;
        ssl_certificate_key /home/ssl/datalace_org_privkey.key;
        ssl_trusted_certificate /home/ssl/datalace_org_rootca.crt;
        send_timeout 600;
        client_max_body_size 512M;  
        gzip on;
        gzip_comp_level 4;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
          location / {
                    alias /var/www/dist/;
                    try_files $uri $uri/ /index.html;

                    add_header Cache-Control public;
                    add_header Cache-Control no-store;
                    add_header Cache-Control no-cache;

                    if_modified_since off;
                    add_header Last-Modified "";
                    expires off;
            }
     
        location /api/ {
             rewrite ^/api/(.*) /$1 break;  # Remove the "/api" prefix
            proxy_pass http://backend_servers;

            proxy_read_timeout 3000s;

            # Set headers for the backend servers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }
}